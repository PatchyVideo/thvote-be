on:
  workflow_call:
    inputs:
      folder:
        required: true
        type: string
      name:
        required: true
        type: string
jobs:
  build-rust:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache registry
        uses: actions/cache@v2
        with:
          key: v0-rust-registry-${{ runner.os }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            /tmp/.cargo/registry
            /tmp/.cargo/git
      - name: Cache target
        uses: actions/cache@v2
        with:
          key: v0-rust-target-${{ runner.os }}-${{ inputs.folder }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            v0-rust-target-${{ runner.os }}-${{ inputs.folder }}-
          path: |
            ./target
      - name: Pull muslrust
        run: docker pull clux/muslrust

      - name: Build
        run: docker run
          -v /tmp/.cargo/registry:/root/.cargo/registry
          -v /tmp/.cargo/git:/root/.cargo/git
          -v $GITHUB_WORKSPACE:/volume
          -w /volume/${{ inputs.folder }}
          --rm -t clux/muslrust
          cargo build --target x86_64-unknown-linux-musl --release

      - name: Copy target
        run: cp ./target/x86_64-unknown-linux-musl/release/${{ inputs.name }} ./${{ inputs.folder }}/tmp.app

      - name: Build Docker image
        run: |
          docker build --no-cache -t ${{ inputs.name }} ./${{ inputs.folder }}
          docker save -o ${{ inputs.name }}.tar ${{ inputs.name }}
      - name: Upload image to artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.name }}.tar
          path: ${{ inputs.name }}.tar

      - name: Fix cache
        run: sudo chmod -R 777 /tmp/.cargo
